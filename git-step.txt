1.下载git。
2.创建一个本地的git仓库 git init。
3.本地仓库存到缓存区，git add
4.上传到本地仓库 git commit
5.上传到github。首先注册github帐号
6.创建Github项目
7.创建本地的私钥匙和公钥。$ ssh-keygen -t rsa -C "youremail@example.com"
  验证是否成功$ ssh -T git@github.com
8.连接远程git的用户名和邮箱x****sx,60****47@qq.com
  Git config --global user.name
  Git config --global user.email
9.上传到远程的github。


远程连接github注意事项
1.创建好github仓库后就是与git仓库的关联了，此时打开刚才那个命令框，执行
$ git remote add origin https://github.com/cnjy/test.git


2.?不过此时会有一个坑，如果我们在创建github仓库是勾选了Initialize this repository with a README（就是创建仓库的时候自动给你创建一个README文件），此时我们就需要执行接下来的一步
$ git pull --rebase origin master

3.关联好之后就是讲文件push到github上了 
如果github仓库的文件夹时空的执行
$ git push -u origin master

4.?等远程仓库里面有了内容之后，下次再从本地库上传内容的时候只需下面这样就可以了
$ git push origin master

5更改github远程地址
  修改命令
  git remote origin set-url [url]
  先删后加
  git remote rm origin
  git remote add origin [url]
  
  
分支的操作

git log -10    //查看之前提交的版本

git show 版本号    //查看具体版本号的详细修改

git branch  //查看本地所有分支，为master分支

git checkout -b master1 origin/master   //1:新建一个新分支master1)----简历新分支master1跟踪远程分支master， --- 此时git branch查看分支，为master 、master1  2个分支；

------------------在新分支master1操作---------

git cherry-pick 版本号    //2:复制内容倒master1----复制版本号的对应修改到master1

git status   //此时gitstatus 会显示有一个待提交  是刚复制的点

git pull origin master  //拉取master的最新内容倒master1

git push origin master1:master   //3:将找回内容提交到master----将本地的修改（刚复制的点）master1提交到master(注意master1后不要带空格  不然会将远程的master干掉)

git branch -r  //查看远程分支

git branch -d master  //4:删除本地分支master----删除本地master分支 --- 此时git branch 查看本地分支，只有master1一个本地分支

git branch -m master1 master   //5：将master1重命名为master----将master1重命名为master  --- 此时git branch 查看本地分支,是master分支

gitigonre修改之后忽略文件上传
git rm -r --cached .
git add .
git commit -m 'update .gitignore'
